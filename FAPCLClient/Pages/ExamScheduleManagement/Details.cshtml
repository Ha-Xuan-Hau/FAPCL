@page "{id:int}"
@model FAPCLClient.Pages.ExamScheduleManagement.DetailsModel
@{
    ViewData["Title"] = "Exam Schedule Details";

    // Create a dictionary of all query parameters except 'id'
    var routeData = new Dictionary<string, string>();
    foreach (var param in Request.Query)
    {
        if (param.Key.ToLower() != "id")
        {
            routeData[param.Key] = param.Value;
        }
    }
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Exam Details</h2>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="card border-danger mb-4">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">Error</h5>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <i class="bi bi-exclamation-triangle-fill text-danger" style="font-size: 3rem;"></i>
                </div>
                <h4 class="text-center mb-3">@(Model.ErrorMessage.Contains("not found") ? "Exam Schedule Not Found" :
                                    "Error")</h4>
            <p class="text-center">
                @if (Model.ErrorMessage.Contains("not found"))
                    {
                        <span>The exam schedule you're looking for (ID: @Model.Id) does not exist in the system.</span>
                    }
                    else
                    {
                        <span>@Model.ErrorMessage</span>
                    }
                </p>
                <div class="text-center mt-4">
                    <a href="javascript:history.back()" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Go Back
                    </a>
                </div>
            </div>
        </div>
    }
    else if (Model.ExamInfos != null && Model.ExamInfos.Any())
    {
        @foreach (var exam in Model.ExamInfos)
        {
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tbody>
                                    <tr>
                                        <th style="width: 200px;">Course:</th>
                                        <td>@exam.CourseName</td>
                                    </tr>
                                    <tr>
                                        <th>Course Description:</th>
                                        <td>@exam.CourseDescription</td>
                                    </tr>
                                    <tr>
                                        <th>Exam Type:</th>
                                        <td>
                                            @{
                                                var displayExamName = exam.ExamName;
                                                var sessionIndex = exam.ExamName.IndexOf("[Session:");
                                                if (sessionIndex >= 0)
                                                {
                                                    displayExamName = exam.ExamName.Substring(0, sessionIndex).Trim();
                                                }
                                            }
                                            @displayExamName
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Date:</th>
                                        <td>@exam.ExamDate.ToString("dd/MM/yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th>Time:</th>
                                        <td>@exam.StartTime.ToString(@"hh\:mm") - @exam.EndTime.ToString(@"hh\:mm")</td>
                                    </tr>
                                    <tr>
                                        <th>Room:</th>
                                        <td>@exam.RoomName</td>
                                    </tr>
                                    @if (exam.Teacher != null)
                                    {
                                        <tr>
                                            <th>Teacher:</th>
                                            <td>@exam.Teacher.TeacherName</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @if (exam.Students != null && exam.Students.Any())
                    {
                        <div class="mt-4">
                            <h5>Student List</h5>
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead class="table-light">
                                        <tr>
                                            <th scope="col" style="width: 80px;" class="text-center">No.</th>
                                            <th scope="col" style="width: 150px;">Code</th>
                                            <th scope="col">Full Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < exam.Students.Count; i++)
                                        {
                                            var student = exam.Students[i];
                                            <tr>
                                                <td class="text-center">@(i + 1)</td>
                                                <td>@student.StudentId</td>
                                                <td>@student.StudentName</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mt-3">
                            No students assigned to this exam.
                        </div>
                    }
                </div>


            </div>
        }
    }
    else
    {
        <div class="card border-warning mb-4">
            <div class="card-header bg-warning text-dark">
                <h5 class="mb-0">No Data Available</h5>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <i class="bi bi-search text-warning" style="font-size: 3rem;"></i>
                </div>
                <h4 class="text-center mb-3">No Exam Details Found</h4>
                <p class="text-center">
                    The exam schedule exists but contains no detailed information.
                </p>
                <div class="text-center mt-4">
                    <a href="javascript:history.back()" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Go Back
                    </a>
                </div>
            </div>
        </div>
    }

    @if (Model.ExamInfos != null && Model.ExamInfos.Any())
    {
        <div class="mt-3 d-flex justify-content-end">
            <a href="javascript:history.back()" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Go Back
            </a>
        </div>

    }
</div>
